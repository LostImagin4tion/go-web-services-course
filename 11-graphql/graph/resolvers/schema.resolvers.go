package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	"stepikGoWebServices/graph"
)

// Catalog returns catalogResolver implementation.
func (res *Resolver) Catalog() graph.CatalogResolver { return &catalogResolver{Resolver: res} }

// Item returns ItemResolver implementation.
func (res *Resolver) Item() graph.ItemResolver { return &itemResolver{res} }

// Mutation returns MutationResolver implementation.
func (res *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{res} }

// Query returns QueryResolver implementation.
func (res *Resolver) Query() graph.QueryResolver { return &queryResolver{res} }

// Seller returns SellerResolver implementation.
func (res *Resolver) Seller() graph.SellerResolver { return &sellerResolver{res} }

func stringPtr(s string) *string {
	return &s
}

func getUserFromContext(ctx context.Context) (string, error) {
	user, ok := ctx.Value("user").(string)
	if !ok {
		return "", fmt.Errorf("user not authorized")
	}
	return user, nil
}
